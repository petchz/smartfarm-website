{"version":3,"sources":["pages/register.js","pages/qrscan.js","pages/main.js","route.js","serviceWorker.js","index.js"],"names":["liff","window","API","register","props","e","console","log","preventDefault","setState","loading","axios","post","uid","state","name","tel","then","res","registered","setTimeout","closeWindow","catch","err","deplicated","duplicated","changeHandler","target","value","line_pic","loader","verify","initialize","bind","document","title","init","liffId","a","async","isLoggedIn","getProfile","profile","userId","pictureUrl","login","this","id","className","Transition","visible","animation","duration","Form","onSubmit","Header","as","icon","Icon","Subheader","Field","required","placeholder","type","disabled","onChange","maxLength","Button","color","content","Dimmer","active","onClickOutside","handleClose","page","inverted","role","aria-label","Loader","size","indeterminate","Component","qrCode","scanCode","result","stringifiedResult","JSON","stringify","alert","getElementById","textContent","Login","to","route","basename","process","exact","path","component","Main","Register","QRscan","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64368c0f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Header,\n  Form,\n  Icon,\n  Transition,\n  Loader,\n  Dimmer\n} from \"semantic-ui-react\";\n\nconst liff = window.liff;\nconst API = \"https://line-smartfarm-api.herokuapp.com\";\n\nexport default class register extends Component {\n  // I should try redux...\n  constructor(props) {\n    super(props);\n    this.state = {\n      uid: \"\",\n      line_pic: \"\",\n      name: \"\",\n      tel: \"\",\n      loading: false,\n      loader: false,\n      verify: false,\n      registered: false,\n      duplicated: false\n    };\n    this.initialize = this.initialize.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = \"Register\";\n    setTimeout(() => {\n      this.setState({ loader: true });\n      this.initialize();\n      // this.verify(); //use this function if test\n    }, 500);\n  }\n\n  initialize() {\n    // init liff with liffId from LINE dev.\n    liff.init({ liffId: \"1653759696-vxLMYoW8\" }, async () => {\n      console.log(\"Getting UID from LIFF\");\n      // check if user is logged in.\n      if (liff.isLoggedIn()) {\n        let profile = await liff.getProfile();\n        this.setState({\n          uid: profile.userId,\n          line_pic: profile.pictureUrl\n        });\n        this.verify();\n      }\n      // if user is not login then using liff login function.\n      else {\n        liff.login();\n      }\n    });\n  }\n\n  // check for duplicated UID\n  verify() {\n    console.log(\"Checking for duplicated...\");\n    axios\n      .post(API + \"/verify\", {\n        uid: this.state.uid\n      })\n      .then(res => {\n        // console.log(res);\n        console.log(\"New UID Detected!\");\n        this.setState({ loader: false });\n        setTimeout(() => {\n          this.setState({ verify: true });\n        }, 1500);\n      })\n      .catch(err => {\n        // console.log(err);\n        console.log(\"Duplicated UID Detected!\");\n        liff.closeWindow();\n      });\n  }\n\n  // post a form data to DB\n  register = e => {\n    console.log(\"Registering...\");\n    e.preventDefault();\n    this.setState({ loading: true });\n    axios\n      .post(API + \"/users\", {\n        uid: this.state.uid,\n        name: this.state.name,\n        tel: this.state.tel\n      })\n      .then(res => {\n        console.log(res);\n        console.log(\"Register Success!\");\n        \n        this.setState({ registered: true })\n\n        // delay before close liff\n        setTimeout(() => {\n          liff.closeWindow();\n        }, 2000);\n      })\n      .catch(err => {\n        console.log(err);\n        console.log(\"Register Failed!\");\n        this.setState({ loading: true, registered: true, deplicated: true })\n        setTimeout(() => {\n          this.setState({ loading: false, registered: false, duplicated: false });\n        }, 2500);\n      });\n  };\n\n  // use to check form change\n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          {this.state.verify ? (\n            // register form\n            <div id=\"register-form\" className=\"main\">\n              <Transition\n                visible={this.state.verify}\n                animation=\"fade up\"\n                duration={1000}\n              >\n                <Form onSubmit={this.register}>\n                  <Header as=\"h1\" icon className=\"prompt\">\n                    <Icon name=\"pencil alternate\" />\n                    ลงทะเบียนผู้ใช้ใหม่\n                    <Header.Subheader className=\"subheader\">\n                      {this.state.loading\n                        ? \"กรุณารอสักครู่ กำลังประมวลผลค่ะ\"\n                        : \"โปรดกรอกข้อมูลก่อนเริ่มใช้งานด้วยค่ะ\"}\n                    </Header.Subheader>\n                  </Header>\n                  <Form.Field required>\n                    <label className=\"form-label\">ชื่อเกษตรกร</label>\n                    <input\n                      required\n                      className=\"form-input\"\n                      placeholder=\"กรอกชื่อที่นี่\"\n                      type=\"text\"\n                      name=\"name\"\n                      value={this.state.name}\n                      disabled={this.state.loading}\n                      onChange={this.changeHandler}\n                    />\n                  </Form.Field>\n                  <Form.Field required>\n                    <label className=\"form-label\">เบอร์โทรศัพท์</label>\n                    <input\n                      required\n                      className=\"form-input\"\n                      placeholder=\"กรอกเบอร์โทรศัพท์ที่นี่\"\n                      maxLength=\"10\"\n                      type=\"tel\"\n                      name=\"tel\"\n                      value={this.state.tel}\n                      disabled={this.state.loading}\n                      onChange={this.changeHandler}\n                    />\n                  </Form.Field>\n                  <Button\n                    color=\"orange\"\n                    content=\"ลงทะเบียน\"\n                    className=\"form-btn\"\n                    type=\"submit\"\n                    disabled={this.state.loading}\n                    loading={this.state.loading}\n                  />\n                </Form>\n              </Transition>\n              <div>\n                <Dimmer\n                  active={this.state.registered}\n                  onClickOutside={this.handleClose}\n                  page\n                >\n                  <Header as=\"h2\" icon inverted className=\"prompt\">\n                    <Icon name={this.state.duplicated ? \"times\" : \"check\"} />\n                    {this.state.duplicated ? \"ลงทะเบียนล้มเหลว!\" : \"ลงทะเบียนสำเร็จ!\"}\n                    <Header.Subheader className=\"subheader\">\n                    {this.state.duplicated ? \"โปรดลองใหม่อีกครั้งค่ะ\" : \"กำลังออกจากหน้าต่างลงทะเบียนค่ะ\"}\n                      <span role=\"img\" aria-label=\"please\">\n                        {\" \"}\n                        🚀\n                      </span>\n                    </Header.Subheader>\n                  </Header>\n                </Dimmer>\n              </div>\n            </div>\n          ) : (\n            // Loader when entering register pages.\n            <div id=\"loader\" className=\"main\">\n              <Transition\n                visible={this.state.loader}\n                animation=\"fade up\"\n                duration={1000}\n              >\n                <div>\n                  <Loader size=\"massive\" active indeterminate inverted>\n                    <Header as=\"h2\" className=\"prompt\">\n                      <br />\n                      กำลังโหลด...\n                      <Header.Subheader className=\"subheader\">\n                        กรุณารอสักครู่ค่ะ\n                        <span role=\"img\" aria-label=\"please\">\n                          {\" \"}\n                          🥺\n                        </span>\n                      </Header.Subheader>\n                    </Header>\n                  </Loader>\n                </div>\n              </Transition>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nconst liff = window.liff;\n\nexport default class qrCode extends Component {\n  // initialize() {\n  //   function scanCode() {\n  //     liff.scanCode().then(result => {\n  //       const stringifiedResult = JSON.stringify(result);\n  //       alert(stringifiedResult);\n  //       document.getElementById(\"scanCode\").textContent = stringifiedResult;\n  //     });\n  //   }\n  //   liff.init({ liffId: \"1610155283-WqRpOKwB\" }, () => {});\n  // }\n  scanCode() {\n    liff.scanCode().then(result => {\n      const stringifiedResult = JSON.stringify(result);\n      alert(stringifiedResult);\n      document.getElementById(\"scanCode\").textContent = stringifiedResult;\n      liff.init({ liffId: \"1653759696-JeYDkn12\" }, () => {});\n    });\n  }\n\n  componentDidMount() {\n    document.title = \"QRScan\";\n    this.scanCode();\n  }\n\n  render() {\n    return (\n      <div>\n        <p id=\"scanCode\"></p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\n\nexport default function Login() {\n  return (\n    <div className=\"main\">\n      <div>\n        <br />\n        <Link to=\"/register\">Register</Link>\n        <br />\n      </div>\n      <br></br>\n      <div>\n        <br />\n        <Link to=\"/qrscan\">QR</Link>\n        <br />\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Register from \"./pages/register\";\nimport QRscan from \"./pages/qrscan\";\nimport Main from \"./pages/main\";\n\nexport default class route extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path=\"/\" component={Main} />\n        <Route path=\"/Register\" component={Register} />\n        <Route path=\"/QRScan\" component={QRscan} />\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Route from \"./route\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Route />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}